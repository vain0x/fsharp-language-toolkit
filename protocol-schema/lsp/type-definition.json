{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "definitions": {
        "Position": {
            "description": "Position in a text document expressed as zero-based line and character offset.\nThe offsets are based on a UTF-16 string representation. So a string of the form\n`aêêÄb` the character offset of the character `a` is 0, the character offset of `êêÄ`\nis 1 and the character offset of b is 3 since `êêÄ` is represented using two code\nunits in UTF-16.\n\nPositions are line end character agnostic. So you can not specify a position that\ndenotes `\\r|\\n` or `\\n|` where `|` represents the character offset.\nThe Position namespace provides helper functions to work with\n[Position](#Position) literals.",
            "properties": {
                "character": {
                    "description": "Character offset on a line in a document (zero-based). Assuming that the line is\nrepresented as a string, the `character` value represents the gap between the\n`character` and `character + 1`.\n\nIf the character value is greater than the line length it defaults back to the\nline length.\nIf a line number is negative, it defaults to 0.",
                    "type": "number"
                },
                "line": {
                    "description": "Line position in a document (zero-based).\nIf a line number is greater than the number of lines in a document, it defaults back to the number of lines in the document.\nIf a line number is negative, it defaults to 0.",
                    "type": "number"
                }
            },
            "type": "object"
        },
        "TextDocumentIdentifier": {
            "description": "A literal to identify a text document in the client.\nThe TextDocumentIdentifier namespace provides helper functions to work with\n[TextDocumentIdentifier](#TextDocumentIdentifier) literals.",
            "properties": {
                "uri": {
                    "description": "The text document's uri.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "TypeDefinitionClientCapabilities": {
            "description": "Since 3.6.0",
            "properties": {
                "dynamicRegistration": {
                    "description": "Whether implementation supports dynamic registration. If this is set to `true`\nthe client supports the new `TypeDefinitionRegistrationOptions` return value\nfor the corresponding server capability as well.",
                    "type": "boolean"
                },
                "linkSupport": {
                    "description": "The client supports additional metadata in the form of definition links.\n\nSince 3.14.0",
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "TypeDefinitionOptions": {
            "properties": {
                "workDoneProgress": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "TypeDefinitionParams": {
            "properties": {
                "partialResultToken": {
                    "description": "An optional token that a server can use to report partial results (e.g. streaming) to\nthe client.",
                    "type": [
                        "string",
                        "number"
                    ]
                },
                "position": {
                    "$ref": "#/definitions/Position",
                    "description": "The position inside the text document."
                },
                "textDocument": {
                    "$ref": "#/definitions/TextDocumentIdentifier",
                    "description": "The text document."
                },
                "workDoneToken": {
                    "description": "An optional token that a server can use to report work done progress.",
                    "type": [
                        "string",
                        "number"
                    ]
                }
            },
            "type": "object"
        },
        "TypeDefinitionRegistrationOptions": {
            "properties": {
                "documentSelector": {
                    "description": "A document selector to identify the scope of the registration. If set to null\nthe document selector provided on the client side will be used.",
                    "items": {
                        "anyOf": [
                            {
                                "properties": {
                                    "language": {
                                        "description": "A language id, like `typescript`.",
                                        "type": "string"
                                    },
                                    "pattern": {
                                        "description": "A glob pattern, like `*.{ts,js}`.",
                                        "type": "string"
                                    },
                                    "scheme": {
                                        "description": "A Uri [scheme](#Uri.scheme), like `file` or `untitled`.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            {
                                "properties": {
                                    "language": {
                                        "description": "A language id, like `typescript`.",
                                        "type": "string"
                                    },
                                    "pattern": {
                                        "description": "A glob pattern, like `*.{ts,js}`.",
                                        "type": "string"
                                    },
                                    "scheme": {
                                        "description": "A Uri [scheme](#Uri.scheme), like `file` or `untitled`.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            {
                                "properties": {
                                    "language": {
                                        "description": "A language id, like `typescript`.",
                                        "type": "string"
                                    },
                                    "pattern": {
                                        "description": "A glob pattern, like `*.{ts,js}`.",
                                        "type": "string"
                                    },
                                    "scheme": {
                                        "description": "A Uri [scheme](#Uri.scheme), like `file` or `untitled`.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "type": "array"
                },
                "id": {
                    "description": "The id used to register the request. The id can be used to deregister\nthe request again. See also Registration#id.",
                    "type": "string"
                },
                "workDoneProgress": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "TypeDefinitionRequest.HandlerSignature": {
            "type": "object"
        }
    }
}

